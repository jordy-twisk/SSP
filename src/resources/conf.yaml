openapi: 3.0.2
# Coach == Tutor
# Tutorant == student of the Tutor
# CoachProfile == Data of a Coach in the Coach AND Student table
#	This means deleting a CoachProfile deletes the Coach from the Coach table and the Student table
#	Note the only field that may be changed from the Coach table is the workload 

#to be done
#authentication

servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/barendmosch/TinderClone/1.0.0
  - description: Server URL
    url: https://tinderclonev120190930031733.azurewebsites.net

info:
  description: This is the MBO-HBO Tinder Clone API
  version: "1.0.0"
  title: MBO Tinder API
  contact:
    email: 586141@student.inholland.nl
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

security:
  - BasicAuth: [] #username:password -> base64encoded string

paths:
  /api/student/{studentID}:
    get:
      tags:
      - Studentdata
      summary: get data call
      operationId: GetStudentByID
      description: Returns the student data based on the student number.
      parameters: 
        - in: path
          name: studentID
          description: The student's personal id.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return student data.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '401':
          description: Student password is not accepted.
        '404':
          description: Student number not in database.
        '429':
          description: Too many request on the database.
        '503':
          description: External component or database or service is unavailable at the moment.
    put:
      tags:
      - Studentdata
      summary: update data information
      operationId: UpdateUserByID
      description: Update a student data based on filters.
      parameters:
        - in: path
          name: studentID
          description: The student's personal id.
          required: true
          schema:
            type: integer
      requestBody:
        description: all info that is needed to create the coach + profile
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: modified.
        '400':
          description: Undocumented filter parameter.
        '401':
          description: Student password is not accepted.
        '404':
          description: Student number not in database.
        '429':
          description: Too many request on the database.
        '503':
          description: External component or database or service is unavailable at the moment.
  /api/students/search:
    get:
      tags:
      - Studentdata
      summary: search for student profiles
      operationId: GetAll
      description: Returns a list of student profiles from the database filtered by filters.
      # No parameters returns back every profile.
      parameters:
        - in: query
          name: studentID
          description: The student number is the students personal id.
          required: false
          schema:
              type: integer
        - in: query
          name: firstName
          description: The first name of the student.
          required: false
          schema:
              type: string
        - in: query
          name: surName
          description: The surname of the student.
          required: false
          schema:
              type: string
        - in: query
          name: phoneNumber
          description: The phoneNumber of the student.
          required: false
          schema:
              type: string
        - in: query
          name: interests
          description: The interests of the student.
          required: false
          schema:
              type: array
              items:
                type: string
        - in: query
          name: degree
          description: The degree of the student.
          required: false
          schema:
              type: string
        - in: query
          name: study
          required: false
          description: The study of the student.
          schema:
              type: string
        - in: query
          name: studyYear
          description: The study year of the student.
          required: false
          schema:
              type: integer
      responses:
        '200':
          description: Return list of student profiles.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Undocumented filter parameter.
        '401':
          description: Student password is not accepted.
        '404':
          description: Student number not in database.
        '429':
          description: Too many requests
        '503':
          description: External component or database or service is unavailable at the moment.
  /api/profile/coach:
    get:
      tags:
        - Coach profile
      summary: get all coach profiles.
      operationId: GetAllCoachProfiles
      description: Get all coach profiles.
      responses:
        '200':
          description: Returned profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoachProfile'
        '400':
          description: Undocumented filter parameter.
        '401':
          description: Student password is not accepted.
        '429':
          description: Too many requests
        '503':
          description: External component or database or service is unavailable at the moment.
    post:
      tags:
        - Coach profile
      summary: create user profile for a coach
      operationId: CreateCoachProfile
      description: Creates a new coach profile.
      requestBody:
        description: all info that is needed to create the coach + profile
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoachProfile'
      responses:
        '201':
          description: Has been created.
        '401':
          description: Student password is not accepted.
        '404':
          description: Student number not in database.
        '409':
          description: Student number already exists.
        '429':
          description: Too many request on the database
        '503':
          description: External component or database or service is unavailable at the moment.
  /api/profile/coach/{studentID}:
    get:
      tags:
      - Coach profile
      summary: get coach and his profile
      operationId: GetCoachProfileByID
      description: Returns requested coach.
      parameters:
        - in: path
          name: studentID
          description: The student number is the students personal id.
          required: true
          schema:
            type: integer
      responses:
          '200':
            description: Return coach + his student profile.
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/CoachProfile'
          '400':
            description: Undocumented filter parameter.
          '401':
            description: Student password is not accepted.
          '404':
            description: Student number not in database.
          '429':
            description: Too many requests
          '503':
            description: External component or database or service is unavailable at the moment.
    delete:
      tags:
      - Coach profile
      summary: delete coach profile information
      operationId: DeleteCoachProfileByID
      description: Delete a coach profile.
      parameters:
        - in: path
          name: studentID
          description: The student's personal id.
          required: true
          schema:
            type: integer
      responses:
            '204':
              description: Delete was successful.
            '400':
               description: Delete has failed.
            '401':
              description: Student password is not accepted.
            '404':
              description: Delete has failed no studentnumber exists.
            '429':
              description: Too many request on the database.
            '503':
              description: External component or database or service is unavailable at the moment.
  /api/profile/tutorant:
    get:
      tags:
        - Tutorant profile
      summary: get all tutorant profiles
      operationId: GetAllTutorantProfiles
      description: Get all tutorant profiles.
      responses:
        '200':
          description: Returned profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TutorantProfile'
        '401':
          description: Student password is not accepted.
        '404':
          description: Student number not in database.
        '409':
          description: Student number already exists.
        '429':
          description: Too many request on the database
        '503':
          description: External component or database or service is unavailable at the moment.
    post:
      tags:
        - Tutorant profile
      summary: create user profile for a tutorant
      operationId: CreateTutorantProfile
      description: Creates a new tutorant profile.
      requestBody:
        description: all info that is needed to create the tutorant + profile
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TutorantProfile'
      responses:
        '201':
          description: TutorantProfile has been created.
        '400':
          description: Requestbody incomplete or studentIDs do not match
        '401':
          description: Student password is not accepted.
        '404':
          description: Student number not in database.
        '409':
          description: Student number already exists.
        '429':
          description: Too many request on the database
        '503':
          description: External component or database or service is unavailable at the moment.
  /api/profile/tutorant/{studentID}:
    get:
      tags:
      - Tutorant profile
      summary: get tutorant and his profile.
      operationId: GetTutorantProfileByID
      description: Returns requested coach.
      parameters:
        - in: path
          name: studentID
          description: The student number is the students personal id.
          required: true
          schema:
            type: integer
      responses:
          '200':
            description: Return tutorant + his student profile.
            content:
              application/json:
                schema:
                  type: array
                  items:
                  $ref: '#/components/schemas/TutorantProfile'
          '400':
            description: Undocumented filter parameter.
          '401':
            description: Student password is not accepted.
          '404':
            description: Student number not in database.
          '429':
            description: Too many requests
          '503':
            description: External component or database or service is unavailable at the moment.
    delete:
      tags:
      - Tutorant profile
      summary: delete tutorant profile information
      operationId: DeleteTutorantProfileByID
      description: Delete a tutorant profile.
      parameters:
        - in: path
          name: studentID
          description: The student's personal id.
          required: true
          schema:
            type: integer
      responses:
            '204':
              description: Delete was successful.
            '400':
              description: Delete has failed.
            '401':
              description: Student password is not accepted.
            '404':
              description: Delete has failed, no studentnumber exists.
            '429':
              description: Too many request on the database.
            '503':
              description: External component or database or service is unavailable at the moment.
  /api/coach/{studentID}:
    get:
      tags:
      - Coach profile
      summary: get coach and workload
      operationId: GetCoachByID
      description: Returns requested coach and his maximum workload.
      parameters:
        - in: path
          name: studentID
          description: The student number is the students personal id.
          required: true
          schema:
            type: integer
      responses:
          '200':
            description: Return coach profile.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Coach'
          '400':
            description: Undocumented filter parameter.
          '401':
            description: Student password is not accepted.
          '404':
            description: Student number not in database.
          '429':
            description: Too many requests
          '503':
            description: External component or database or service is unavailable at the moment.
    put:
      tags:
      - Coach profile
      summary: update coach and workload
      operationId: UpdateCoachByID
      description: Returns requested coach and his maximum workload.
      parameters:
        - in: path
          name: studentID
          description: The student number is the students personal id.
          required: true
          schema:
            type: integer
      requestBody:
        description: studentID (ignored) and workload of the coach (studentID of the path is used) 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coach'
      responses:
          '204':
            description: Update was successful.
          '400':
            description: Undocumented filter parameter.
          '401':
            description: Student password is not accepted.
          '404':
            description: Student number not in database.
          '429':
            description: Too many requests
          '503':
            description: External component or database or service is unavailable at the moment.
  /api/coachTutorant:
    put:
      tags:
        - CoachTutorant
      operationId: UpdateConnection
      description: Update the status of a connection matching the studentID of the coach and studentID of the tutorant
      requestBody:
        description: Containts the pair (studentID of coach and studentID of tutorant) that has to have its status updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoachTutorantConnection'
      responses:
          '204':
            description: Data updated succesfully.
          '400':
            description: Incorrect requestbody and/or failing query.
          '401':
            description: Student password is not accepted.
          '429':
            description: Too many request on the database.
          '503':
            description: Database or other services are unavailable at the moment.
  /api/coachTutorant/coach/{studentID}:
    get:
      tags:
        - CoachTutorant
      operationId: GetAllConnectionsByCoachID
      description: Get all connections of a specific coach
      parameters:        
        - in: path
          name: studentID
          description: The studentID of the coach
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: All connections of the coach
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoachTutorantConnection'
        '400':
          description: Query has failed.
        '401':
          description: Student password is not accepted.
        '404':
          description: CoachID has no connections.
        '429':
          description: Too many requests.
        '503':
          description: Database or other services are unavailable at the moment.
    delete:
      tags:
        - CoachTutorant
      operationId: DeleteConnectionByCoachID
      description: Delete all connections of a specific coach.
      parameters: 
        - in: path
          name: studentID
          description: The studentID of the coach
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Connection deleted succesfully.
        '400':
          description: Query has failed.
        '401':
          description: Student password is not accepted.
        '429':
          description: Too many request on the database.
        '503':
          description: Database or other services are unavailable at the moment.
  /api/coachTutorant/tutorant/{studentID}:
    get:
      tags:
        - CoachTutorant
      operationId: GetConnectionByTutorantID
      description: Get the connection of the tutorant to their coach
      parameters:        
        - in: path
          name: studentID
          description:  The studentID of the tutorant
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returned tutorant coach connection.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoachTutorantConnection'
        '400':
          description: Query has failed.
        '401':
          description: Student password is not accepted.
        '404':
          description: Tutorant has no connections.
        '429':
          description: Too many requests.
        '503':
          description: Database or other services are unavailable at the moment.
    post:
      tags:
        - CoachTutorant
      operationId: CreateConnectionByTutorantID
      description: Create a connection to a coach for the tutorant
      parameters:
        - in: path
          name: studentID
          description: The studentID of the tutorant
          required: true
          schema:
            type: integer
      requestBody:
        description: Containts the studentID of the coach and the studentID of te tutorant and the initial status of the connection.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoachTutorantConnection'
      responses:
        '201':
          description: Connection has succesfully been created.
        '400':
          description: Incorrect requestbody and/or failing query.
        '401':
          description: Student password is not accepted.
        '429':
          description: Too many request on the database
        '503':
          description: Database or other services are unavailable at the moment.
    delete:
      tags:
        - CoachTutorant
      operationId: DeleteConnectionByTutorantID
      description: Delete the connections of a specific tutorant.
      parameters: 
        - in: path
          name: studentID
          description: The studentID of the tutorant
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Connection has succesfully been deleted.
        '400':
          description: No data to delete
        '401':
          description: Student password is not accepted.
        '429':
          description: Too many request on the database. 
        '503':
          description: Database or other services are unavailable at the moment.
  /api/messages/{coachID}/{tutorantID}:
    get:
      tags: 
      - Messages
      summary: get messages
      operationId: GetAllMessages
      description: Returns some messages, default number of last messages is 20 that will be returned.
      parameters: 
        - in: path
          name: coachID
          schema:
            type: integer
          description: The coach his student number.
          required: true
        - in: path
          name: tutorantID
          schema:
            type: integer
          description: The tutorant his student number.
          required: true
        - in: query
          name: amountOfMessages
          schema:
            type: integer
          description: The number of messages that will be returned.
          required: true
      responses:
        '200':
          description: Return an array of "message".
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Messages'
        '401':
          description: Student password is not accepted.
        '404':
          description: Coach and tutorant number don't match any messages.
        '429':
          description: Too many request on the database.
        '503':
          description: External component or database or service is unavailable at the moment.
  /api/message/{messageID}:
    #think about if we need this one, or remove, because why would we only get one message?
    get:
      tags:
        - Message
      summary: get message
      operationId: GetMessageByID
      description: Returns a specific message.
      parameters: 
        - in: path
          name: messageID
          schema:
            type: integer
          description: Specific message ID.
          required: true
      responses:
        '200':
          description: Return the requested message.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          description: Student password is not accepted.
        '404':
          description: messageID Coach and tutorant number don't match any message.
        '429':
          description: Too many request on the database.
        '503':
          description: External component or database or service is unavailable at the moment.
    put:
      tags:
        - Message
      summary: modify message
      operationId: UpdateMessageByID
      description: Changes the messages by the user's choice.
      parameters: 
        - in: path
          name: messageID
          schema:
            type: integer
          description: Specific message ID.
          required: true
        - in: query
          name: coachStudentID
          schema:
            type: integer
          description: The coach his student number.
          required: true
        - in: query
          name: tutorantStudentID
          schema:
            type: integer
          description: The tutorant his student number.
          required: true
        - in: query
          name: payload
          schema:
            type: integer
          description: The modified messaged.
          required: true
      responses:
        '201':
          description: Modified the requested message.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          description: Student password is not accepted.
        '404':
          description: messageID Coach and tutorant number don't match any message.
        '429':
          description: Too many request on the database.
        '503':
          description: External component or database or service is unavailable at the moment.
    delete:
      tags:
        - Message
      summary: delete a message
      operationId: DeleteMessageByID
      description: Delete a specific message.
      parameters: 
        - in: path
          name: messageID
          schema:
            type: integer
          description: Specific message ID.
          required: true
      responses:
        '204':
          description: Deleted the requested message.
        '401':
          description: Student password is not accepted.
        '404':
          description: messageID Coach and tutorant number don't match any message.
        '429':
          description: Too many request on the database.
        '503':
          description: External component or database or service is unavailable at the moment.
  /api/message:  
    post:
      tags:
      - Message
      summary: post message
      operationId: CreateMessage
      description: post a message to the API.
      requestBody:
        description: all info needed to create message.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: successfully posted the message.
        '401':
          description: Student password is not accepted.
        '404':
          description: Coach or/and tutorant number don't exist in database.
        '429':
          description: Too many request on the database.
        '503':
          description: External component or database or service is unavailable at the moment.

components:
    securitySchemes:
      BasicAuth:
        type: http
        scheme: basic
    schemas:
      # Is a profile.
      Student:
          type: object
          required: 
              - studentID
          properties:
              studentID:
                  type: integer
                  example: 578123
              firstName:
                  type: string
                  example: "Yuki"
              surName:
                  type: string
                  example: "Basthiaan"
              phoneNumber:
                  type: string
                  example: "0645236582"
              interests:
                  type: string
                  example: "Programming (C only), Servers, Cisco"
              photo:
                  type: string
                  example: "https://i.redd.it/xmulu1f6urt11.jpg"
              description:
                  type: string
                  example: "I am a hbo student."
              # Degree:  havo || vwo || mbo || hbo || wo
              degree:
                  type: string
                  example: "hbo"
              study:
                  type: string
                  example: "Informatica"
              # hbo: 1st, 2nd, 3rd, 4th year
              studyYear:
                  type: integer
                  example: 2
      TutorantProfile:
        type: object
        required:
          - user
          - student
        properties:
          user:
            type: object
            $ref: '#/components/schemas/Student'
          student:
            type: object
            $ref: '#/components/schemas/Tutorant'
      Tutorant:
        type: object
        required:
          - studentID
        properties:
          studentID:
            type: integer
            example: 520438
      # User profile of the coach and coach object.
      CoachProfile:
        type: object
        required:
          - user
          - coach
        properties:
          user:
            type: object
            $ref: '#/components/schemas/Student'
          coach:
            type: object
            $ref: '#/components/schemas/Coach'
      # Coach studentID and workload.
      Coach:
        type: object
        required:
          - studentID
          - workload
        properties:
          studentID:
            type: integer
            example: 520438
          workload:
            type: integer
            example: 2
      # Coach with a Tutorant pair. Status of the request as well.
      CoachTutorantConnection:
        type: object
        required:
          - studentIDCoach
          - studentIDTutorant
          - status
        properties:
          studentIDCoach:
            type: integer
            example: 520438
          studentIDTutorant:
            type: integer
            example: 590549
          status:
            type: string
            example: "pending"
      # Chat system
      Messages:
        properties:
          list:
            type: array
            items:
              type: object
              $ref: '#/components/schemas/Message'
      Message:
        type: object
        required:
        - messageID
        - type
        - payload
        - created
        - lastModified
        properties:
          messageID:
            type: integer
            # couchStudentNumber + tutorantStudentNumber + increment creates a unique id.
            # Saved as separate fields.
            example: 59053939
          #coachStudentID:
          #  type: integer
          #  example: 590539
          #tutorantStudentID:
          #  type: integer
          #  example: 510539
          type:
            type: string
            example: "text"
          payload:
            type: object
            example: {"text": "Interesting message!"}
          created:
            type: string
            example: "2019-05-01T00:00:00Z"
          # if put modified message: different
          # else: same as created.
          lastModified:
            type: string
            example: "2019-06-01T00:00:00Z"
      # Generic fail message
      Fail:
          type: object
          properties:
              Message:
                  type: string
                  example: "Failed to do things."
